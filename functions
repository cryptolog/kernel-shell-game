#!/bin/bash
# vim: noai:ts=4:sw=4:syn=sh

#   Copyright 2013 Jon Allen (ylixir@gmail.com)
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
# functions
# this is the script that builder.sh sources to do all the dirty work

# this function simply deletes everything
clean_directories ()
{
  rm -rf $BASE_DIR/$ROOT_TARGET;
  rm -rf $BASE_DIR/$DEBOOT_DIR;
  rm -rf $BASE_DIR/$KERNEL_DIR;
}
# just make the directories we'll need
create_directories ()
{
  mkdir -p $BASE_DIR/$DEBOOT_DIR
  mkdir -p $BASE_DIR/$ROOT_TARGET
  mkdir -p $BASE_DIR/$KERNEL_DIR
}

# this function gets the debootstrap package and unpacks it into the appropriate directory, all ready to be used
get_deboot ()
{
  cd $BASE_DIR/$DEBOOT_DIR;
  wget -c $DEBOOT_SRC/$DEBOOT_DEB;
  ar -x $DEBOOT_DEB;
  tar -xzf data.tar.gz;
  cd $BASE_DIR;
}

# this function just creates the chroot environment
deboot_chroot ()
{
  # do the bootstrap
  DEBOOTSTRAP_DIR=$BASE_DIR/$DEBOOT_DIR/usr/share/debootstrap $BASE_DIR/$DEBOOT_DIR/usr/sbin/debootstrap --variant=buildd --arch=$ROOT_ARCH --no-check-gpg $ROOT_SUITE $BASE_DIR/$ROOT_TARGET $ROOT_SOURCE;
  
  #deboot feels the need to mount proc, we don't need it here
  umount $BASE_DIR/$ROOT_TARGET/proc;

#stop dpkg from running daemons
cat > $BASE_DIR/$ROOT_TARGET/usr/sbin/policy-rc.d <<EOF
#!/bin/sh
exit 101
EOF
  chmod a+x $BASE_DIR/$ROOT_TARGET/usr/sbin/policy-rc.d;

# update the chroot's sources.list
cat > $BASE_DIR/$ROOT_TARGET/etc/apt/sources.list <<EOF
deb http://archive.ubuntu.com/ubuntu $ROOT_SUITE main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu $ROOT_SUITE-updates main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu $ROOT_SUITE-security main restricted universe multiverse
EOF

  #divert ischroot
  #note that this throws error, my need to be fixed, not sure
  chroot $BASE_DIR/$ROOT_TARGET dpkg-divert --divert /usr/bin/ischroot.debianutils --rename /usr/bin/ischroot;
  chroot $BASE_DIR/$ROOT_TARGET /bin/ln -s /bin/true /usr/bin/ischroot;

  chroot $BASE_DIR/$ROOT_TARGET dpkg -i /var/cache/apt/archives/apt_*.deb;
}

# bring the chroot current
upgrade_chroot ()
{
  chroot $BASE_DIR/$ROOT_TARGET apt-get update;
  chroot $BASE_DIR/$ROOT_TARGET apt-get dist-upgrade;
}

# install required packages in the chroot
install_build_tools ()
{
  chroot $BASE_DIR/$ROOT_TARGET apt-get install $REQUIRED_PACKAGES;
}

# this function gets the architecture for our chroot
# currently only ix86 32 and 64 bit targets are supported
# but I'll eventually get around to adding more
get_architecture ()
{
  case `uname -m` in
    i?86)
      ROOT_ARCH=i386
      ;;
    x86_64)
      ROOT_ARCH=amd64
      ;;
    *)
      echo "I don't know what kind of architecture the chroot needs to be"
      exit 1
      ;;
  esac;
}

# deboot comes out of the box with an offensive mount command.
# this patches it to fix the error when mounting the proc file system
# this patch from http://blog.tsunanet.net/2013/01/using-debootstrap-with-grsec.html?m=1
patch_deboot ()
{
local MOUNT_PATCH="--- usr/share/debootstrap/functions.orig	2013-11-26 07:15:53.909242727 -0600
+++ usr/share/debootstrap/functions	2013-11-26 07:17:39.464665969 -0600
@@ -998,12 +998,14 @@
 		umount_on_exit /proc/bus/usb
 		umount_on_exit /proc
 		umount "'"'"\$TARGET/proc"'"'" 2>/dev/null || true
-		in_target mount -t proc proc /proc
+#		in_target mount -t proc proc /proc
+		sudo mount -o bind /proc "'"'"\$TARGET/proc"'"'"
 		if [ -d "'"'"\$TARGET/sys"'"'" ] && \\
 		   grep -q '[[:space:]]sysfs' /proc/filesystems 2>/dev/null; then
 			umount_on_exit /sys
 			umount "'"'"\$TARGET/sys"'"'" 2>/dev/null || true
-			in_target mount -t sysfs sysfs /sys
+#			in_target mount -t sysfs sysfs /sys
+			sudo mount -o bin /sys "'"'"\$TARGET/sys"'"'"
 		fi
 		on_exit clear_mtab
 		;;
";

printf '%s' "$MOUNT_PATCH"|patch --ignore-whitespace --verbose $BASE_DIR/$DEBOOT_DIR/usr/share/debootstrap/functions;
}
